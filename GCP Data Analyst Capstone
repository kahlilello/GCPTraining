1 Collect, process, and store data in BigQuery


Task 3: Import a CSV file and create a standard table

LOAD DATA OVERWRITE fintech.state_region
(
state string,
subregion string,
region string
)
FROM FILES (
format = 'CSV',
uris = ['gs://sureskills-lab-dev/future-workforce/da-capstone/temp_35_us/state_region_mapping/state_region_*.csv']);


Task 4: Join data from two tables

SELECT
lo.loan_id,
lo.loan_amount,
sr.region
FROM fintech.loan lo
INNER JOIN fintech.state_region sr
ON lo.state = sr.state;

Task 5: Create a table based on the results of a query using CTAS

CREATE OR REPLACE TABLE fintech.loan_with_region AS
SELECT
lo.loan_id,
lo.loan_amount,
sr.region
FROM fintech.loan lo
INNER JOIN fintech.state_region sr
ON lo.state = sr.state;


Task 6: Work with nested data

SELECT loan_id,application.purpose
FROM fintech.loan;

Task 7: Deduplicate data

DROP TABLE fintech.loan_purposes;

CREATE TABLE fintech.loan_purposes AS
SELECT DISTINCT application.purpose
FROM fintech.loan;

Task 8: Answer business questions with a report

SELECT issue_year, sum(loan_amount) AS total_amount
FROM fintech.loan
GROUP BY issue_year;

CREATE TABLE fintech.loan_count_by_year AS
SELECT issue_year, COUNT(loan_id) AS loan_count
FROM fintech.loan
GROUP BY issue_year;

2 Analyze and activate your data with Looker Enterprise

Task 2 
Query A
SELECT 
  COALESCE(
    SUM(CASE WHEN (loan.loan_status <> 'Fully Paid' 
            OR loan.loan_status IS NULL)
        THEN loan.loan_amount ELSE NULL END), 0) AS loan_outstanding_loans_amount 
FROM `cloud-training-demos.fintech.loan` AS loan LIMIT 500;





